/*
Colors used

Text Color (Dark Gray): #2B2B2B;
Primary Color (Blue Magenta): #266;
Secondary Color (Dark Moderate Red): #aa3939;
Tertiary Color (Alpine): #aa8439;
Dark Blue Magenta: #074444;
Light Blue Magenta: #94baba;
*/

/* :root is a psuedo-class. this pseudo-class targets all elements within <html> */
:root {
  --primary-color: #266;
  --secondary-color: #aa3939;
  --tertiary-color: #aa8439;
  --dark-blue-magenta: #074444;
  --light-blue-magenta: #94baba;
  --green-cyan: #489c79;
  --light-gray: #dbdbdb;
  --near-white-red: #f8f8f8;
  --warm-yellow: #edc655;
  --light-yellow: #fcffad;
  --light-orange: #f76414;
  --norm-font-wt: 300;
  --bold: 700;
  --sm-text: 16px;
  --reg-text: 18px;
  --lg-text: 22px;

}

/* * used as a selector applies to ALL HTML ELEMENTS */
* {
  /* total width = (width - padding - border) + padding + border */
  box-sizing: border-box;
}

body {
  /* sans-serif is backup in case Poppins can't be used */
  font-family: 'Poppins', sans-serif;
  font-weight: var(--norm-font-wt);
  line-height: 40px;
}

header, footer {
  font-size: var(--reg-text);
  line-height: 30px;
}


a {
  color: var(--primary-color);
  text-decoration: none;
  transition: font-weight .2s;
}


/* removing until I can figure out how to not have it affect the below
a:visited {
  /* selected link 
  color: #aa8439;
}
*/

/* list selectors side by side to apply the same styling to multiple elements */
a:hover, a:focus {
  font-weight: var(--bold);
}

a:active {
  /* selected link */
  color: var(--green-cyan);
}

button, .button {
  /* overwrites browser defaults and resets the border  */
  border: none;
  background-color: var(--primary-color);
  font-family: inherit;
  font-size: var(--sm-text);
  /* a:visited is causing .button to show #aa8439 text color */
  color: white;
  text-decoration: none;
  padding: 10px;
  border-radius: 3px;
  /* solid bottom border 2px wide */
  border-bottom: 2px solid rgba(0,0,0,0.3);
  transition-duration: 0.2s opacity;
}

button:hover, button:focus, .button:hover, .button:focus {
  /* mouse = hand */
  cursor: pointer;
  /*reduces opacity*/
  opacity: 0.8;
}

.page-header {
  display: flex; 
  width: 100%;
  border-bottom: 1px solid var(--light-gray);
  padding: 10px 10px 5px 10px;
}

.page-header_item {
  flex: 0 1 200px;
}

.page-header_item:last-child {
  flex-grow: 1;
  text-align: right;
}

.navigation-list {
  list-style: none;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}

.navigation-list_item--active {
  text-decoration: none;
  font-weight: var(--bold);
}

.icon {
  display: none;
}

.profile {
  min-width: 360px;
  max-width: 700px;
  margin: 60px auto;
}

.profile_portrait {
  float: left;
  width: 250px;
  /* Set height to auto to make sure value matches correct ratio */
  height: auto;
  margin-right: 40px;
  border-radius: 50%;
}

.profile_content {
  text-align: center;
}

.page-footer {
  /* clear all floats, both right and left */
  clear: both;
  display: flex;
  flex-direction: column;
  text-align: center;
}

.social-media-icon {
  text-decoration: none;
}

.work {
  max-width: 90%;
  min-width: 300px;
  margin: 0 auto;
}

.work_title {
  text-align: center;
}

/* GRID STYLIZATION */
/* start grid fallback */
.grid_item {
  display: inline-block;
  width: 33%;
}
/* end fallback */

@supports (display: grid) {
.grid {
  display: grid;
  /* best practice to define only columns or rows (typically columns) and the other will be autopopulated */
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 20px;
  margin: 0;
}

/* Give grid items light background to see what's going on */
.grid_item {
  background-color: lightgray;
  width: auto;
  min-height: auto;
  margin: 0;
}

.grid_item:nth-last-child(2) {
  grid-area: 2 / 2 / 4 / 3;
}

.grid_item:last-child {
  grid-area: 1 / 3 / 4 / 4;
}
}

/* About Me Page */

/*** --NEED TO ADD FALLBACK-- ***/

/* grid container */
.about-me {
  display: grid;
  grid-template-columns: 1fr 1fr;
  min-width: 360px;
  max-width: 700px;
  margin: 20px auto;
  row-gap: 10px;
  column-gap: 5px;
}

/* grid item 1 */
.about-me_img {
  float: left;
  margin: 0 20px;
  align-self: center;
  justify-self: center;
  grid-area: 1 / 1 / 3 / 2;
}

/* grid item 2 */
.about-me_content {
  text-align: justify;
  margin: 0 20px;
}

.about-me_header {
  text-align: center;
}

.button {
  /* need to center */
  display: flex;
  justify-content: center;
  align-items: center;
  height: 40px;
  width: fit-content;
  margin: 0 auto;
}

/* grid item 3 */
.about-me_table {
  background-color: var(--light-blue-magenta);
  grid-area: 3 / 1 / 4 / 3;
  padding: 30px;
  width: 100%;
  justify-self: center;
}

td {
  text-align: center;
}

/* Contact Page */
.contact {
  max-width: 700px;
  margin: 0 auto;
  min-width: 300px;
}

.contact_info {
  text-align: center;
}

.contact_form {
  text-align: center;
  margin-top: 30px;
  padding: 20px 0 20px 0;
  background-color: var(--near-white-red);
  border: 2px solid var(--light-gray);
  border-radius: 5px;
}

.contact_form-label {
  display: none;
}

input, textarea {
  max-width: 650px;
  min-width: 80%;
  margin-bottom: 10px;
}

textarea {
  margin-top: 10px;
}

@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
  }

  #about-picture {
    width: 360px;
  }
}

@media all and (min-width: 500px) and (max-width: 750px) {
  .grid {
    grid-template-columns: 1fr 1fr;
  }
}

@media all and (max-width: 750px) {
  /*shared code*/
  header {
    font-size: var(--sm-text);
    line-height: 15px;
  }

  .page-header {
    padding: 1px 5px;
  }

  .grid {
    grid-gap: 10px;
  }
  
  .grid_item:last-child, .grid_item:nth-last-child(2) {
    grid-area: auto / auto / auto / auto;
  }

  h1 {
    font-size: var(--lg-text);
  }

  .about-me {
    grid-template-columns: 1fr;
  }

  .about-me_table {
    grid-area: auto;
  }

  .profile_portrait {
    width: 200px;
    display: block;
    float: none;
    margin: 10px auto;
  }
}


.svg-container {
  width: 100%;
  height: fit-content;
  display: flex;
}

#about-picture {
  max-height: 505px;
  max-width: 700px;
  margin: 0 auto;
  justify-self: center;
}

/* color-change is the name of the animation */
@keyframes color-change {
  0% {
    /* fill is specific to SVGs */
    fill: var(--warm-yellow);
  }
  50% {
    fill: var(--light-yellow);
  }  
  100% {
    fill: var(--light-orange);
  }
}

.sun {
  animation: color-change 5s infinite alternate linear;
}

@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(500px, 50px);
  }
}

.cloud-front {
  animation: 60s cloud-move infinite linear alternate;
}

@keyframes cloud-move-reverse {
  from {
    transform: translate(500px, 40px);
  }
  to {
    transform: translate(0px, 40px);
  }
}

.cloud-back {
  animation: 60s cloud-move-reverse linear infinite alternate;
}

